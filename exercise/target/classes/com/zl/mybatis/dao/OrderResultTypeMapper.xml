<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 接口 -->
<mapper namespace="com.zl.mybatis.dao.OrderResultTypeMapper">
	
	<!-- 需要关联查询映射的是用户信息，使用association将用户信息映射到订单对象的用户属性中。 -->
	<!-- resultMap id 与下面resultMap一致,type是映射的实体类property 是class属性 -->
	<resultMap type="com.zl.mybatis.pojo.Orders" id="ordersAndUserByResultMap">
		<!-- 这里的id，是mybatis在进行一对一查询时将user字段映射为user对象时要使用，必须写 -->
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
						<!-- 这里是javaType 不可以写column association一对一-->
		<association property="user" javaType="com.zl.mybatis.pojo.User">
		<!-- 这里的id为user的id, 如果写上表示给user的id属性赋值 -->
			<id property="id" column="user_id"/>
			<result property="username" column="user_username"/>
			<result property="address" column="user_address"/>
		</association>
	</resultMap>
	
	<select id="findOrderListResultType" resultMap="ordersAndUserByResultMap" >
		SELECT o.*,
			u.id user_id,
			u.username ,
			u.address 
		FROM orders o
		  INNER JOIN USER u 
		  ON o.user_id = u.id
	</select>



</mapper>





<!--namespace ：命名空间，用于隔离sql语句，后面会讲另一层非常重要的作用。  

parameterType：定义输入到sql中的映射类型
，#{id}表示使用preparedstatement设置占位符号并将输入变量id传到sql。
resultType：定义结果映射类型

-->