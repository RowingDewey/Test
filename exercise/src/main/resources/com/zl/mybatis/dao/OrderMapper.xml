<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 接口 -->
<mapper namespace="com.zl.mybatis.dao.OrderMapper">
	
	<!-- 需要关联查询映射的是用户信息，使用association将用户信息映射到订单对象的用户属性中。 -->
	<!-- resultMap id 与下面resultMap一致,type是映射的实体类property 是class属性 -->
	<resultMap type="com.zl.mybatis.pojo.Orders" id="ordersAndUserByResultMap">
		<!-- 这里的id，是mybatis在进行一对一查询时将user字段映射为user对象时要使用，必须写 -->
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
						<!-- 这里是javaType 不可以写column association一对一-->
		<association property="user" javaType="com.zl.mybatis.pojo.User">
		<!-- 这里的id为user的id, 如果写上表示给user的id属性赋值 -->
			<id property="id" column="user_id"/>
			<result property="username" column="user_username"/>
			<result property="address" column="user_address"/>
		</association>
	</resultMap>
	
	<select id="findOrderListResultMap" resultMap="ordersAndUserByResultMap" >
		SELECT o.*,
			u.id user_id,
			u.username user_username,
			u.address user_address
		FROM orders o
		  INNER JOIN USER u 
		  ON o.user_id = u.id
	</select>

	<resultMap type="com.zl.mybatis.pojo.Orders" id="ordersDetailList" >
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result property="createtime" column="createtime"/>
		
		<association property="user" javaType="com.zl.mybatis.pojo.User">
			<!-- 这里的id为user的id, 如果写上表示给user的id属性赋值 -->
			<id property="id" column="user_id"/>
			<result property="username" column="user_username"/>
			<result property="address" column="user_address"/>
		</association>
		
		<collection property="orderdetails" ofType="com.zl.mybatis.pojo.Orderdetail">
			<id property="id" column="id"/>
			<result property="ordersId" column="orders_id"/>
			<result property="itemsId" column="items_id"/>
			<result property="itemsNum" column="items_num"/> 
		</collection>
	</resultMap>
	<select id="findOrdersDetailList" resultMap="ordersDetailList">
			SELECT o.*, u.username user_username, u.address user_address,
			od.orders_id,
			od.items_id,od.items_num 
				FROM orders o 
				INNER JOIN USER u ON o.user_id = u.id
				INNER JOIN orderdetail od ON od.orders_id = o.id
	</select>

<!-- 	<resultMap type="com.zl.mybatis.pojo.Orders" id="findOrderDetailToItemMap">
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result property="createtime" column="createtime"/>
		
		<association property="user" javaType="com.zl.mybatis.pojo.User">
			<result property="username" column="user_username"/>		
			<result property="address" column="user_address"/>	
		</association>
		
		<collection property="orderdetails" ofType="com.zl.mybatis.pojo.Orderdetail">
			<result property="ordersId" column="orders_id"/>
			<result property="itemsId" column="items_id"/>
			<result property="itemsNum"column="items_num"/>
			<result property="items" javaType="com.zl.mybatis.pojo.Items"/>
			
			<association property="items" javaType="com.zl.mybatis.pojo.Items">
				<result property="id" column=product_id/>
				<result property="name" column="product_name"/>
				<result property="price" column="product_price"/>
			</association>
		</collection>
	</resultMap> -->
	
	<resultMap type="com.zl.mybatis.pojo.User" id="findOrderDetailToItemMap">
		<result property="username" column="user_username"/>		
		<result property="address" column="user_address"/>	
		<collection property="orders" ofType="com.zl.mybatis.pojo.Orders">
			<id property="id" column="id"/>
			<result property="userId" column="user_id"/>
			<result property="number" column="number"/>
			<result property="createtime" column="createtime"/>
			
			<collection property="orderdetails" ofType="com.zl.mybatis.pojo.Orderdetail">
				<result property="ordersId" column="orders_id"/>
				<result property="itemsId" column="items_id"/>  <!-- 这个真是奇怪啊  property="itemsId" column="items_id" 两个之间比有空格 -->
				<result property="itemsNum" column="items_num"/>
				
				<association property="items" javaType="com.zl.mybatis.pojo.Items"> <!-- 没找到我的Items property="items" -->
					<result property="id" column="product_id"/>
					<result property="name" column="product_name"/>
					<result property="price" column="product_price"/>
				</association>
			</collection>
			
		</collection>
	</resultMap>

	<!-- 查询用户购买的商品信息  -->
	<select id="findOrderDetailToItem" resultMap="findOrderDetailToItemMap">
		SELECT o.*, u.username user_username, u.address user_address,od.orders_id,od.items_id,od.items_num,
		im.id product_id,im.name product_name,im.price product_price
		FROM orders o INNER JOIN USER u ON o.user_id = u.id
		INNER JOIN orderdetail 
		od ON od.orders_id = o.id
		INNER JOIN items im ON 
		od.items_num = im.id
	</select>
	<!-- 一个订单只能由一个用户，延迟加载用户信息
		select就是延迟加载的sql语句，指定sql所在statement的id
		column：关联查询的列，这里就是orders表中外键user_id（SELECT * FROM USER WHERE id=orders.user_id）
		 -->
	<resultMap type="com.zl.mybatis.pojo.Orders" id="userOrdermap">
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<association property="user" javaType="User"
			select="com.zl.mybatis.dao.UserMapper.getUserById" column="user_id"><!-- 指定关联查询sql为findUserById  -->
		</association>
	</resultMap>
	
	<!-- 一对一查询延迟加载  -->
	<select id="findOrdersOrderLazyLoadingUser" resultMap="userOrdermap">
		select * from orders
	</select>

</mapper>





<!--namespace ：命名空间，用于隔离sql语句，后面会讲另一层非常重要的作用。  

parameterType：定义输入到sql中的映射类型
，#{id}表示使用preparedstatement设置占位符号并将输入变量id传到sql。
resultType：定义结果映射类型

-->